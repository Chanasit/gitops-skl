apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      initContainers:
        - name: init-jenkins
          image: curlimages/curl:latest
          env:
            - name: ADMIN_USER
              value: admin
            - name: ADMIN_PASSWORD
              value: jenkins!
          command:
            - /bin/sh
            - -c
            - |
              until nc -z localhost 8080; do
                echo "Waiting for Jenkins service to be available..."
                ADMIN_CRUMB=$(curl -s 'http://localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)')
                curl -X POST -H "$ADMIN_CRUMB" -d "json={'username': '$ADMIN_USER', 'password': '$ADMIN_PASSWORD'}" -H 'Content-Type: application/x-www-form-urlencoded' http://localhost:8080/securityRealm/createAccount
                sleep 5
              done
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          ports:
            - containerPort: 8080
            - containerPort: 50000
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: JAVA_OPTS
              value: "-Djenkins.install.runSetupWizard=false"
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
      volumes:
        - name: jenkins-data
          emptyDir: {}

        # - name: jenkins-credentials
        #   secret:
        #     secretName: jenkins-credentials
